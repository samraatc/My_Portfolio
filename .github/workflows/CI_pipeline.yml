name: "CI Pipeline"

# Trigger the workflow on push, pull request, or manual trigger to main/master
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  # Job for Frontend
  frontend-build:
    name: "Frontend Build and Test"         # Job name
    runs-on: ubuntu-latest                  # Use Ubuntu runner
    defaults:
      run:
        working-directory: frontend         # All steps run from 'frontend' folder

    steps:
      # Step 1: Checkout code
      - name: "Checkout code"
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: "Set up Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: '21'

      - name: "list all working-directory:"
        run: ls -la

      # Step 3: Install frontend dependencies
      - name: "Install dependencies"
        run: npm install

      # Step 4: Build frontend project
      - name: "Build frontend"
        run: npm run build

      # Step 5: Run frontend tests (optional, uncomment if needed)
      # - name: "Test frontend"
      #   run: npm test

      # Step 6: Upload frontend build artifact
      - name: "Upload frontend build"
        uses: actions/upload-artifact@v4
        with:
          name: build             # Artifact name 
          path: frontend/dist                       # Adjust if build output folder is different

  # # Job for Backend
  # backend-build:
  #   name: "Backend Build and Test"
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: Backend          # All steps run from 'Backend' folder

  #   steps:
  #     # Step 1: Checkout code
  #     - name: "Checkout code"
  #       uses: actions/checkout@v4

  #     # Step 2: Set up Node.js
  #     - name: "Set up Node.js"
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '21'

  #     - name: "list all working-directory:"
  #       run: ls -la

  #     # Step 3: Install backend dependencies
  #     - name: "Install dependencies"
  #       run: npm install

  #     # Step 4: Build backend project (adjust if your backend doesn't need this)
  #     # - name: "Build backend"
  #     #   run: npm run build

  #     # Step 5: Run backend tests (optional, uncomment if needed)
  #     # - name: "Test backend"
  #     #   run: npm test

  #     # Step 6: Upload backend build artifact (optional)
  #     - name: "Upload backend build"
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: backend-build
  #         path: dist                        # Adjust if build output folder is different
